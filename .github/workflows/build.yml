# اسم سير العمل الذي سيظهر في قسم Actions
name: Build and Release Executable

# متى يتم تشغيل هذا السير العمل؟
# هنا، سيتم تشغيله عند أي عملية "push" إلى المستودع
on: [push]

jobs:
  build:
    # تحديد أن العملية يجب أن تتم على أحدث بيئة ويندوز متاحة
    runs-on: windows-latest

    steps:
      # الخطوة 1: سحب نسخة من الكود الموجود في المستودع
      - name: Checkout repository
        uses: actions/checkout@v4

      # الخطوة 2: إعداد بيئة بايثون
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # الخطوة 3: تثبيت المكتبات المطلوبة
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nuitka
          pip install -r requirements.txt

      # الخطوة 4: تشغيل Nuitka لتحويل الكود
      - name: Run Nuitka compilation
        run: |
          python -m nuitka --onefile --windows-console-mode=disable --enable-plugin=tk-inter --assume-yes-for-downloads --output-dir=dist app.py

      # *** الخطوة الجديدة: إنشاء Release ورفع الملف ***
      - name: Create Release and Upload Asset
        uses: softprops/action-gh-release@v2
        with:
          # اسم الملف الذي سيتم رفعه
          files: dist/app.exe
          # إنشاء وسم (tag) فريد لكل إصدار بناءً على تاريخ ووقت البناء
          tag_name: build-${{ github.run_number }}
          # جعل هذا الإصدار هو الأحدث (latest)
          make_latest: true
        env:
          # استخدام التوكن التلقائي من GitHub للسماح بإنشاء Release
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
